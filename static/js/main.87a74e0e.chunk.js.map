{"version":3,"sources":["ApiParts/Tabal.jsx","Navbar.jsx","ApiParts/Search.jsx","ApiParts/API.jsx","WeatherApi/WeatherApi.jsx","App.jsx","index.js"],"names":["BasicTable","props","TableBody","TableCell","align","className","state","statecode","activeCase","confirmedCase","Deaths","recovered","Navbar","Typography","variant","component","Heading","OutlinedCard","CardContent","type","placeholder","CardActions","Button","size","Ntabel","val","active","confirmed","deaths","API","useState","Case","SetCase","useEffect","fatchApi","a","fetch","response","json","data","statewise","console","log","TableContainer","Paper","Table","aria-label","TableHead","TableRow","map","WeatherApi","search","setsearch","City","Setcity","url","main","Card","id","value","onChange","event","target","fontSize","temp","temp_min","temp_max","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAKe,SAASA,EAAWC,GAKjC,OAEM,eAACC,EAAA,EAAD,WACC,cAACC,EAAA,EAAD,CAAWC,MAAM,SAASC,UAAU,MAApC,SAA4CJ,EAAMK,QAC/C,cAACH,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BH,EAAMM,YAEjC,cAACJ,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BH,EAAMO,aACjC,cAACL,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BH,EAAMQ,gBAEjC,cAACN,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BH,EAAMS,SACjC,cAACP,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BH,EAAMU,e,oDCN9BC,EAXA,SAACX,GACZ,OACI,qBAAKI,UAAU,SAAf,SAEK,cAACQ,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,SACFd,EAAMe,a,wBCCF,SAASC,IAGtB,OAEI,eAACC,EAAA,EAAD,CAAab,UAAU,SAAvB,UAEA,uBAAOc,KAAK,SACRC,YAAY,iBAEpB,cAACC,EAAA,EAAD,UACM,cAACC,EAAA,EAAD,CAAQC,KAAK,QAAb,yB,UCNFC,EAAO,SAACC,GACX,OAAO,mCAEV,cAACzB,EAAD,CACIQ,WAAYiB,EAAIC,OACpBjB,cAAegB,EAAIE,UACnBjB,OAAQe,EAAIG,OACZjB,UAAWc,EAAId,UACfL,MAAOmB,EAAInB,MACXC,UAAWkB,EAAIlB,eAqEAsB,EA3DL,WAEN,MAAqBC,qBAArB,mBAAOC,EAAP,KAAYC,EAAZ,KAcJ,OAZAC,qBAAU,WACV,IAAMC,EAAQ,uCAAC,8BAAAC,EAAA,8GAEWC,MAFX,wDAELC,EAFK,gBAGMA,EAASC,OAHf,OAGLC,EAHK,OAIXP,EAAQO,EAAKC,WAJF,2CAAD,qDAOdC,QAAQC,IAAIX,GACRG,MACF,CAACH,IAEI,qCAGP,cAAC,EAAD,CACIf,QAAQ,yCAGZ,cAAC,EAAD,IACGe,EAEH,qBAAK1B,UAAU,QAAf,SAGA,cAACsC,EAAA,EAAD,CAAgB5B,UAAW6B,IAA3B,SACM,eAACC,EAAA,EAAD,CAAOC,aAAW,eAAlB,UAGN,cAACC,EAAA,EAAD,UACU,eAACC,EAAA,EAAD,WACE,cAAC7C,EAAA,EAAD,CAAWC,MAAM,SAAjB,mBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,wBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,yBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,4BACA,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,oBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,4BAKX2B,EAAKkB,IAAIzB,UApBN,oD,yBCgBW0B,EAjEI,WAEf,MAAyBpB,mBAAS,SAAlC,mBAAOqB,EAAP,KAAcC,EAAd,KACJ,EAAqBtB,mBAAS,MAA9B,mBAAOuB,EAAP,KAAYC,EAAZ,KAeI,OAdJrB,qBAAW,YAEO,uCAAE,gCAAAE,EAAA,6DACNoB,EADM,2DACkDJ,EADlD,iEAEWf,MAAMmB,GAFjB,cAEJlB,EAFI,gBAGOA,EAASC,OAHhB,OAGJC,EAHI,OAIZe,EAAQf,EAAKiB,MAJD,2CAAF,qDAMdtB,KAEF,CAACiB,IAKK,qCACA,cAAC,EAAD,CACInC,QAAQ,0BAGZ,eAACyC,EAAA,EAAD,CAAMpD,UAAU,aAAhB,UACI,cAACa,EAAA,EAAD,UACI,cAACL,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,SACI,sBAAKV,UAAU,SAAf,UACA,mDACA,uBAAOc,KAAK,OACPuC,GAAG,QACHC,MAAOR,EACPS,SAAU,SAACC,GAAUT,EAAUS,EAAMC,OAAOH,UALjD,WAUZ,cAACzC,EAAA,EAAD,UAEGmC,EACS,sBAAKhD,UAAU,UAAf,UACA,eAACQ,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,UACL,cAAC,IAAD,CAAgBgD,SAAS,UACtBZ,KAGF,eAACtC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,qBACKsC,EAAKW,KADV,eAMA,cAACnD,EAAA,EAAD,CAAYC,QAAQ,KAApB,SACA,uCAAUuC,EAAKY,SAAf,kBAAqCZ,EAAKa,SAA1C,kBAdG,wDCpBJC,EAdL,WAEV,OACI,qCAED,cAAC,EAAD,IACA,cAAC,EAAD,QCZHC,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,IAAD,UACE,cAAC,EAAD,QAGFC,SAASC,eAAe,W","file":"static/js/main.87a74e0e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\nexport default function BasicTable(props) {\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n        <TableBody  >\r\n         <TableCell align=\"center\" className='Col' >{props.state}</TableCell>\r\n            <TableCell align=\"center\">{props.statecode}</TableCell>\r\n          \r\n            <TableCell align=\"center\">{props.activeCase}</TableCell>\r\n            <TableCell align=\"center\">{props.confirmedCase}</TableCell>\r\n                     \r\n            <TableCell align=\"center\">{props.Deaths}</TableCell>\r\n            <TableCell align=\"center\">{props.recovered}</TableCell>\r\n           \r\n        </TableBody>\r\n         );\r\n}","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <div className=\"navbar\">\r\n      \r\n             <Typography variant=\"h5\" component=\"h2\">\r\n          {props.Heading}\r\n           </Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","\r\n\r\nimport React from 'react';\r\n\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nexport default function OutlinedCard() {\r\n  \r\n\r\n  return (\r\n    \r\n      <CardContent className='search'>\r\n             \r\n      <input type=\"search\"\r\n          placeholder='Search State'\r\n      />\r\n  <CardActions >\r\n        <Button size=\"small\">Search</Button>\r\n      </CardActions>\r\n\r\n      </CardContent>\r\n    \r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\nimport BasicTable from './Tabal';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport Navbar from '../Navbar';\r\nimport Search from './Search';\r\nimport '../css/Top.css'\r\n\r\nconst Ntabel=(val)=>{\r\n   return(<>\r\n\r\n<BasicTable\r\n    activeCase={val.active}\r\nconfirmedCase={val.confirmed}\r\nDeaths={val.deaths}\r\nrecovered={val.recovered}\r\nstate={val.state}\r\nstatecode={val.statecode}\r\n/>\r\n\r\n\r\n   </>);\r\n\r\n}\r\n\r\n\r\n\r\nconst API=()=>{\r\n\r\n    const [Case,SetCase]=useState();\r\n\r\nuseEffect(()=>{\r\nconst fatchApi=async ()=>{\r\n   const url=`https://api.covid19india.org/data.json`;\r\n    const response= await fetch(url);\r\n    const data=await response.json();\r\n    SetCase(data.statewise);\r\n\r\n}\r\nconsole.log(Case);\r\n    fatchApi();\r\n},[Case]);\r\n\r\nreturn(<>\r\n\r\n\r\n<Navbar\r\n    Heading=' All India Statewise Covid-19 Update'\r\n/>\r\n\r\n<Search/>\r\n{ !Case ? ( \r\n    <p> no data found </p> ) : ( \r\n<div className=\"tabal\">\r\n\r\n\r\n<TableContainer component={Paper}  >\r\n      <Table aria-label=\"simple table\">\r\n       \r\n       \r\n<TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">State</TableCell>\r\n            <TableCell align=\"center\">State Code</TableCell>         \r\n            <TableCell align=\"center\">Active Case</TableCell>\r\n            <TableCell align=\"center\">Confirmed Case</TableCell>\r\n            <TableCell align=\"center\">Deaths</TableCell>\r\n            <TableCell align=\"center\">Recovered</TableCell>\r\n          \r\n          </TableRow>\r\n        </TableHead>\r\n\r\n{Case.map(Ntabel)}\r\n\r\n</Table>\r\n    </TableContainer>\r\n\r\n    \r\n\r\n</div>\r\n)}\r\n\r\n\r\n</>);\r\n}\r\n\r\nexport default API;","import React, { useEffect, useState } from 'react'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\n\r\nimport Navbar from '../Navbar';\r\n\r\n\r\nconst WeatherApi = () => {\r\n    \r\n    const [search,setsearch]=useState('delhi');\r\nconst [City,Setcity]=useState(null);\r\nuseEffect( ()=>{\r\n \r\n    const fatchApi= async ()=>{\r\n        const url=`http://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=143eff6fa2ce3bfa844cdbee4d4789d4`;\r\n          const response=await fetch(url);\r\n          const data=await response.json();\r\n        Setcity(data.main);  \r\n    }\r\n    fatchApi();\r\n \r\n},[search])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <Navbar\r\n            Heading='Search Temprature API'\r\n        />\r\n\r\n        <Card className='WetherCard' >\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                    <div className='input2'>\r\n                    <p>Enter any Location</p> \r\n                    <input type='text'\r\n                         id='state'\r\n                         value={search}\r\n                         onChange={(event)=>{ setsearch(event.target.value);  }}\r\n                    /> </div>\r\n                </Typography>\r\n\r\n            </CardContent>\r\n        <CardContent>\r\n            \r\n        { !City ? (<p>data not found</p>) : (\r\n                    <div className=\"content\">\r\n                    <Typography variant=\"h3\" component=\"h2\">\r\n               <LocationOnIcon fontSize=\"large\" />\r\n                 {search}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n            Temp    {City.temp}  °Cel\r\n\r\n           \r\n                </Typography>\r\n                \r\n                <Typography variant=\"h6\" >\r\n                <p>  Min {City.temp_min}°Cel || Max {City.temp_max}°Cel</p>\r\n                </Typography>\r\n                    </div>\r\n                )}\r\n               \r\n        </CardContent>\r\n\r\n        </Card>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default WeatherApi\r\n","import React from 'react';\r\nimport API from './ApiParts/API';\r\nimport WeatherApi from './WeatherApi/WeatherApi';\r\nimport './index.css';\r\nimport './css/Top.css';\r\n\r\nimport {\r\n    \r\n    Switch,\r\n    Route,\r\n  } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst App=()=>{\r\n\r\nreturn(\r\n    <>  \r\n    \r\n   <WeatherApi/>  \r\n   <API/>\r\n\r\n     </>\r\n);\r\n\r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { BrowserRouter} from \"react-router-dom\";\n \nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n  <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}